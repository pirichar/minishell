PROGRAMMING WITH GNU READLINE
http://bashcookbook.com/bashinfo/source/readline-7.0/doc/readline.pdf  P24

readline, - https://tiswww.case.edu/php/chet/readline/history.html 
rl_clear_history,- CLEAR READLINE HISTORY P42 - http://bashcookbook.com/bashinfo/source/readline-7.0/doc/readline.pdf 
rl_on_new_line, - Tell the update function that we have moved onto a new line, usually after outputting a newline - P37 -http://bashcookbook.com/bashinfo/source/readline-7.0/doc/readline.pdf
rl_replace_line, - NOT SURE WHY - P40 - http://bashcookbook.com/bashinfo/source/readline-7.0/doc/readline.pdf 
rl_redisplay, -  rl_redisplay (void) [Function] Change whatâ€™s displayed on the screen to reflect the current contents of rl_line_ buffer. P37 - http://bashcookbook.com/bashinfo/source/readline-7.0/doc/readline.pdf 
add_history,  - void add_history (const char *string) https://tiswww.case.edu/php/chet/readline/history.html 
printf, - OK
malloc, - OK
free, - OK
write, - OK
access, - OK
open, - OK
read, - OK
close, - OK
fork, - OK
wait, - OK - 	pid_t wait (int *statloc	)	WAIT FOR ANY PID MIGHT BE DANGEROUS -https://www.youtube.com/watch?v=h6mD0CPP9AI 
waitpid, - OK - pid_t waitpid(pid_t pid, int *statloc, int options);-  https://linux.die.net/man/2/waitpid YOU CAN CALL IT WITH WNOHANG as option to POLL and just pass by in a loop - pid_t waitpid(pid_t pid, int *stat_loc, int options)	THE ONE I USED IN PIPEX -https://www.youtube.com/watch?v=h6mD0CPP9AI 
wait3, - OK -   pid_t wait3(int *statloc, int options, struct rusage *rusage) Wait3 and wait4 are same as waitpid but provide additional information about the resources used by the terminatefd process https://vimeo.com/658505583
wait4, - OK - 	pid_t wait4(pid_t pid, int *statloc, int options, struct rusage *rusage) rusage stands for ressources usages
signal, - OK -  DO NOT USE PRINTF IN SIGNAL HANDLER -functinon used to handle a signal received from something signal(SIGNAL, HANDLER FUNCTION) - https://www.youtube.com/watch?v=83M5-NPDeWs 
sigaction, - OK - DO NOT USE PRINTF IN SIGNAL HANDLER - int sigaction(int signum, const struct sigaction *act, struct sigaction *oldact) NEWER VERSION OF SIGNAL - gives more option - 4:35 https://www.youtube.com/watch?v=83M5-NPDeWs 
sigemptyset, 
sigaddset, 
kill, - OK - USED TO SEND A SIGNAL TO A PROCESS kill(pid,SIGKILL) - https://www.youtube.com/watch?v=5We_HtLlAbs 
exit, OK - - Exit gives the parent the status the child exited normally or abnormally
getcwd, 
chdir, 
stat, 
lstat, 
fstat, 
unlink, 
execve, - OK
dup, - OK
dup2, - OK
pipe, - OK
opendir, 
readdir, 
losedir,
strerror, 
perror, 
isatty, 
ttyname, 
ttyslot, 
ioctl,
getenv, -  char *getenv(char *name) Look for name in the environment variable and return a pointer to the string represented by the variable https://man7.org/linux/man-pages/man3/getenv.3.html#:~:text=The%20getenv()%20function%20searches,%22secure%20execution%22%20is%20required. 
tcsetattr, 
tcgetattr, 
tgetent, 
tgetflag,
tgetnum, 
tgetstr, 
tgoto, 
tputs